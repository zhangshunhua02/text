"use strict"; function _possibleConstructorReturn(t, e) { if (!t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return !e || "object" != typeof e && "function" != typeof e ? t : e } function _inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function, not " + typeof e); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, enumerable: !1, writable: !0, configurable: !0 } }), e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e) } function _classCallCheck(t, e) { if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function") } var _get = function t(e, o, i) { null === e && (e = Function.prototype); var s = Object.getOwnPropertyDescriptor(e, o); if (void 0 === s) { var r = Object.getPrototypeOf(e); return null === r ? void 0 : t(r, o, i) } if ("value" in s) return s.value; var a = s.get; if (void 0 !== a) return a.call(i) }, _createClass = function () { function t(t, e) { for (var o = 0; o < e.length; o++) { var i = e[o]; i.enumerable = i.enumerable || !1, i.configurable = !0, "value" in i && (i.writable = !0), Object.defineProperty(t, i.key, i) } } return function (e, o, i) { return o && t(e.prototype, o), i && t(e, i), e } }(), Global = function () { function t() { _classCallCheck(this, t) } return _createClass(t, [{ key: "IsPC", value: function () { for (var t = navigator.userAgent, e = !0, o = ["Android", "iPhone", "SymbianOS", "Windows Phone", "iPad", "iPod"], i = 0; i < o.length; i++)if (t.indexOf(o[i]) > 0) { e = !1; break } return e } }, { key: "easeOut", value: function (t, e, o, i) { return (t /= i / 2) < 1 ? o / 2 * t * t + e : -o / 2 * (--t * (t - 2) - 1) + e } }, { key: "windowToCanvas", value: function (t, e) { var o = t.getBoundingClientRect(), i = this.IsPC() ? e.clientX || event.clientX : e.changedTouches[0].clientX, s = this.IsPC() ? e.clientY || event.clientY : e.changedTouches[0].clientY; return { x: i - o.left, y: s - o.top } } }, { key: "drawText", value: function (t, e, o, i, s) { for (var r = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : 20, a = e.split(""), n = "", h = [], u = 0; u < a.length; u++)t.measureText(n).width < s || (h.push(n), n = ""), n += a[u]; h.push(n); for (var l = 0; l < h.length; l++)t.fillText(h[l], o, i + (l + 1) * r) } }, { key: "roundedRect", value: function (t, e, o, i, s, r) { i > 0 ? t.moveTo(e + r, o) : t.moveTo(e - r, o), t.arcTo(e + i, o, e + i, o + s, r), t.arcTo(e + i, o + s, e, o + s, r), t.arcTo(e, o + s, e, o, r), i > 0 ? t.arcTo(e, o, e + r, o, r) : t.arcTo(e, o, e - r, o, r) } }]), t }(), RouletteWheel = function (t) { function e(t) { _classCallCheck(this, e); var o = _possibleConstructorReturn(this, (e.__proto__ || Object.getPrototypeOf(e)).call(this)); return o.centerX = t.centerX, o.centerY = t.centerY, o.outsideRadius = t.outsideRadius, o.evenColor = t.evenColor || "#FF6766", o.oddColor = t.oddColor || "#FD5757", o.loseColor = t.loseColor || "#F79494", o.textColor = t.textColor || "White", o.arrowColorFrom = t.arrowColorFrom || "#FFFC95", o.arrowColorTo = t.arrowColorTo || "#FF9D37", o.buttonFont = t.buttonFont || "开始抽奖", o.buttonFontColor = t.buttonFontColor || "#88411F", o.buttonColorFrom = t.buttonColorFrom || "#FDC964", o.buttonColorTo = t.buttonColorTo || "#FFCB65", o.awards = t.awards, o.startRadian = t.startRadian || 0, o.duration = t.duration || 4e3, o.velocity = t.velocity || 10, o.finish = t.finish, o.INSIDE_RADIUS = 0, o.TEXT_RADIAS = .8 * o.outsideRadius, o.FONT_STYLE = "bold " + .07 * o.outsideRadius + "px Helvetica, Arial", o.ARROW_RADIUS = o.outsideRadius / 3, o.BUTTON_RADIUS = .8 * o.ARROW_RADIUS, o.AWARDS_COUNT = o.awards.length, o.AWARD_RADIAN = 2 * Math.PI / o.AWARDS_COUNT, o._isAnimate = !1, o._spinningTime = 0, o._spinTotalTime, o._spinningChange, o._canvasStyle, o } return _inherits(e, Global), _createClass(e, [{ key: "drawRouletteWheel", value: function (t) { var o = this; t.clearRect(0, 0, t.canvas.width, t.canvas.height), t.save(); var i = this.oddColor.replace("#", ""), s = parseInt(i[0] + i[1], 16), r = parseInt(i[2] + i[3], 16), a = parseInt(i[4] + i[5], 16); t.fillStyle = "rgba(" + s + ", " + r + ", " + a + ", .72)", t.shadowColor = "rgba(0, 0, 0, .24)", t.shadowOffsetX = 0, t.shadowOffsetY = 5, t.shadowBlur = 15, t.arc(this.centerX, this.centerY, this.outsideRadius, 0, 2 * Math.PI, !1), t.fill(), t.restore(); for (var n = 0; n < this.AWARDS_COUNT; n++)!function (e) { t.save(), "losing" === o.awards[e].type ? t.fillStyle = o.loseColor : t.fillStyle = e % 2 == 0 ? o.evenColor : o.oddColor; var i = o.startRadian + o.AWARD_RADIAN * e, s = i + o.AWARD_RADIAN; if (t.beginPath(), t.arc(o.centerX, o.centerY, o.outsideRadius - 5, i, s, !1), t.arc(o.centerX, o.centerY, o.INSIDE_RADIUS, s, i, !0), t.fill(), t.restore(), "image" === o.awards[e].type) { var r = function (t, e) { var o = Math.sin(t.AWARD_RADIAN) * t.outsideRadius / 2.5; e.save(), e.translate(t.centerX + Math.cos(i + t.AWARD_RADIAN / 2) * t.TEXT_RADIAS, t.centerY + Math.sin(i + t.AWARD_RADIAN / 2) * t.TEXT_RADIAS), e.rotate(i + t.AWARD_RADIAN / 2 + Math.PI / 2), e.drawImage(n, -o / 2, 0, o, o), e.restore() }, a = o, n = new Image; n.src = o.awards[e].content, n.complete ? r(a, t) : n.onload = function (e) { r(a, t) } } else if ("text" === o.awards[e].type || "losing" === o.awards[e].type) { var h = o.awards[e].content; t.save(), t.fillStyle = o.textColor, t.font = o.FONT_STYLE, t.translate(o.centerX + Math.cos(i + o.AWARD_RADIAN / 2) * o.TEXT_RADIAS, o.centerY + Math.sin(i + o.AWARD_RADIAN / 2) * o.TEXT_RADIAS), t.rotate(i + o.AWARD_RADIAN / 2 + Math.PI / 2), t.fillText(h, -t.measureText(h).width / 2, 0), t.restore() } }(n); var h = this.centerX, u = this.centerY - this.ARROW_RADIUS + 5; t.save(), t.fillStyle = this.arrowColorFrom, t.beginPath(), t.moveTo(h, u), t.lineTo(h - 15, u), t.lineTo(h, u - 30), t.closePath(), t.fill(), t.restore(), t.save(), t.fillStyle = this.arrowColorTo, t.beginPath(), t.moveTo(h, u), t.lineTo(h + 15, u), t.lineTo(h, u - 30), t.closePath(), t.fill(), t.restore(); var l = t.createLinearGradient(this.centerX - this.ARROW_RADIUS, this.centerY - this.ARROW_RADIUS, this.centerX - this.ARROW_RADIUS, this.centerY + this.ARROW_RADIUS); t.save(), l.addColorStop(0, this.arrowColorFrom), l.addColorStop(1, this.arrowColorTo), t.fillStyle = l, t.shadowColor = "rgba(0, 0, 0, .12)", t.shadowOffsetX = 0, t.shadowOffsetY = 5, t.shadowBlur = 15, t.beginPath(), t.arc(this.centerX, this.centerY, this.ARROW_RADIUS, 0, 2 * Math.PI, !1), t.fill(), t.restore(); var _ = t.createLinearGradient(this.centerX - this.BUTTON_RADIUS, this.centerY - this.BUTTON_RADIUS, this.centerX - this.BUTTON_RADIUS, this.centerY + this.BUTTON_RADIUS); t.save(), _.addColorStop(0, this.buttonColorFrom), _.addColorStop(1, this.buttonColorTo), t.fillStyle = _, t.beginPath(), t.arc(this.centerX, this.centerY, this.BUTTON_RADIUS, 0, 2 * Math.PI, !1), t.fill(), t.restore(), t.save(), t.fillStyle = this.buttonFontColor, t.font = "bold " + this.BUTTON_RADIUS / 2 + "px helvetica", _get(e.prototype.__proto__ || Object.getPrototypeOf(e.prototype), "drawText", this).call(this, t, this.buttonFont, this.centerX - this.BUTTON_RADIUS / 2, this.centerY - this.BUTTON_RADIUS / 2 - 4, .8 * this.BUTTON_RADIUS, this.BUTTON_RADIUS / 2 + 4), t.restore() } }, { key: "rotateWheel", value: function (t) { if (this._spinningTime += 30, this._spinningTime >= this._spinTotalTime) return this._isAnimate = !1, void (this.finish && this.finish(this.getValue())); var o = (this._spinningChange - _get(e.prototype.__proto__ || Object.getPrototypeOf(e.prototype), "easeOut", this).call(this, this._spinningTime, 0, this._spinningChange, this._spinTotalTime)) * (Math.PI / 180); this.startRadian += o, this.drawRouletteWheel(t), window.requestAnimationFrame(this.rotateWheel.bind(this, t)) } }, { key: "getValue", value: function () { var t = 180 * this.startRadian / Math.PI + 90, e = 180 * this.AWARD_RADIAN / Math.PI; return Math.floor((360 - t % 360) / e) } }, { key: "luckyDraw", value: function (t) { this._isAnimate = !0, this.value = "", this._spinningTime = 0, this._spinTotalTime = 1e3 * Math.random() + this.duration, this._spinningChange = 100 * Math.random() + this.velocity, this.rotateWheel(t) } }, { key: "render", value: function (t, o) { var i = this; this._canvasStyle = t.getAttribute("style"), this.drawRouletteWheel(o), ["touchstart", "mousedown"].forEach(function (s) { t.addEventListener(s, function (s) { if (!i._isAnimate) { var r = _get(e.prototype.__proto__ || Object.getPrototypeOf(e.prototype), "windowToCanvas", i).call(i, t, s); o.beginPath(), o.arc(i.centerX, i.centerY, i.BUTTON_RADIUS, 0, 2 * Math.PI, !1), o.isPointInPath(r.x, r.y) && i.luckyDraw(o) } }) }), t.addEventListener("mousemove", function (s) { var r = _get(e.prototype.__proto__ || Object.getPrototypeOf(e.prototype), "windowToCanvas", i).call(i, t, s); o.beginPath(), o.arc(i.centerX, i.centerY, i.BUTTON_RADIUS, 0, 2 * Math.PI, !1), o.isPointInPath(r.x, r.y) ? t.setAttribute("style", "cursor: pointer;" + i._canvasStyle) : t.setAttribute("style", i._canvasStyle) }) } }]), e }(), ScratchCard = function (t) { function e(t) { _classCallCheck(this, e); var o = _possibleConstructorReturn(this, (e.__proto__ || Object.getPrototypeOf(e)).call(this)); return o.style = t.style, o.awardBackgroundImage = t.awardBackgroundImage, o.eraserSize = t.eraserSize || 15, o.coverColor = t.coverColor || "#b5b5b5", o._dragging = !1, o } return _inherits(e, Global), _createClass(e, [{ key: "drawCover", value: function (t) { t.save(), t.fillStyle = this.coverColor, t.beginPath(), t.rect(0, 0, t.canvas.width, t.canvas.height), t.fill(), t.restore() } }, { key: "drawEraser", value: function (t, e) { t.save(), t.beginPath(), t.arc(e.x, e.y, this.eraserSize, 0, 2 * Math.PI, !1), t.clip(), t.clearRect(0, 0, t.canvas.width, t.canvas.height), t.restore() } }, { key: "drawAwardBackgroundImage", value: function (t) { t.setAttribute("style", "background: url(" + this.awardBackgroundImage + ") no-repeat center / cover;" + this.style) } }, { key: "render", value: function (t, o) { var i = this; this.drawCover(o), this.drawAwardBackgroundImage(t), ["touchstart", "mousedown"].forEach(function (s) { t.addEventListener(s, function (s) { var r = _get(e.prototype.__proto__ || Object.getPrototypeOf(e.prototype), "windowToCanvas", i).call(i, t, s); i._dragging = !0, i.drawEraser(o, r) }) }), ["touchmove", "mousemove"].forEach(function (s) { t.addEventListener(s, function (s) { var r = void 0; i._dragging && (r = _get(e.prototype.__proto__ || Object.getPrototypeOf(e.prototype), "windowToCanvas", i).call(i, t, s), i.drawEraser(o, r)) }) }), ["touchend", "mouseup"].forEach(function (e) { t.addEventListener(e, function (t) { i._dragging = !1 }) }) } }]), e }(), Sudoku = function (t) { function e(t) { _classCallCheck(this, e); var o = _possibleConstructorReturn(this, (e.__proto__ || Object.getPrototypeOf(e)).call(this)); return o.awards = t.awards, o.sudokuSize = t.sudokuSize, o.sudokuItemRadius = t.sudokuItemRadius || 8, o.sudokuItemUnactiveColor = t.sudokuItemUnactiveColor || "rgb(255, 235, 236)", o.sudokuItemUnactiveTxtColor = t.sudokuItemUnactiveTxtColor || "rgb(48, 44, 43)", o.sudokuItemUnactiveShadowColor = t.sudokuItemUnactiveShadowColor || "rgb(255, 193, 200)", o.sudokuItemActiveColor = t.sudokuItemActiveColor || "rgb(254, 150, 51)", o.sudokuItemActiveTxtColor = t.sudokuItemActiveTxtColor || "rgb(255, 255, 255)", o.sudokuItemActiveShadowColor = t.sudokuItemActiveShadowColor || "rgb(255, 193, 200)", o.buttonColor = t.buttonColor || "rgb(255, 216, 1)", o.buttonTxtColor = t.buttonTxtColor || "rgb(172, 97, 1)", o.buttonShadowColor = t.buttonShadowColor || "rgb(253, 177, 1)", o.duration = t.duration || 4e3, o.velocity = t.velocity || 300, o.hasButton = t.hasButton || "true", o.finish = t.finish, o.AWARDS_ROW_LENGTH = Math.floor(o.awards.length / 4) + 1, o.AWARDS_STEP = o.AWARDS_ROW_LENGTH - 1, o.AWARDS_LEN = 4 * o.AWARDS_STEP, o.LETF_TOP_POINT = 0, o.RIGHT_TOP_POINT = o.AWARDS_STEP, o.RIGHT_BOTTOM_POINT = 2 * o.AWARDS_STEP, o.LEFT_BOTTOM_POINT = 2 * o.AWARDS_STEP + o.AWARDS_STEP, o.SUDOKU_ITEM_MARGIN = o.sudokuSize / o.AWARDS_ROW_LENGTH / 6, o.SUDOKU_ITEM_SIZE = o.sudokuSize / o.AWARDS_ROW_LENGTH - o.SUDOKU_ITEM_MARGIN, o.SUDOKU_ITEM_TXT_SIZE = "bold " + .12 * o.SUDOKU_ITEM_SIZE + "px Helvetica", o.BUTTON_SIZE = o.sudokuSize - (2 * o.SUDOKU_ITEM_SIZE + 3 * o.SUDOKU_ITEM_MARGIN), o.BUTTON_TXT_SIZE = "bold " + .12 * o.BUTTON_SIZE + "px Helvetica", o._positions = [], o._buttonPosition = [], o._isAnimate = !1, o._jumpIndex = Math.floor(Math.random() * o.AWARDS_LEN), o._jumpingTime = 0, o._jumpTotalTime, o._jumpChange, o._canvasStyle, o } return _inherits(e, Global), _createClass(e, [{ key: "drawSudoku", value: function (t) { t.clearRect(0, 0, t.canvas.width, t.canvas.height); for (var e = this.AWARDS_STEP * this.SUDOKU_ITEM_SIZE + this.AWARDS_STEP * this.SUDOKU_ITEM_MARGIN, o = 0; o < this.AWARDS_LEN; o++) { if (o >= this.LETF_TOP_POINT && o < this.RIGHT_TOP_POINT) { var i = o, s = i * this.SUDOKU_ITEM_SIZE + i * this.SUDOKU_ITEM_MARGIN; this._positions.push({ x: s, y: 0 }), this.drawSudokuItem(t, s, 0, this.SUDOKU_ITEM_SIZE, this.sudokuItemRadius, this.awards[o].type, this.awards[o].content, this.SUDOKU_ITEM_TXT_SIZE, this.sudokuItemUnactiveTxtColor, this.sudokuItemUnactiveColor, this.sudokuItemUnactiveShadowColor) } if (o >= this.RIGHT_TOP_POINT && o < this.RIGHT_BOTTOM_POINT) { var r = Math.abs(this.AWARDS_STEP - o), a = e, n = r * this.SUDOKU_ITEM_SIZE + r * this.SUDOKU_ITEM_MARGIN; this._positions.push({ x: a, y: n }), this.drawSudokuItem(t, a, n, this.SUDOKU_ITEM_SIZE, this.sudokuItemRadius, this.awards[o].type, this.awards[o].content, this.SUDOKU_ITEM_TXT_SIZE, this.sudokuItemUnactiveTxtColor, this.sudokuItemUnactiveColor, this.sudokuItemUnactiveShadowColor) } if (o >= this.RIGHT_BOTTOM_POINT && o < this.LEFT_BOTTOM_POINT) { var h = Math.abs(2 * this.AWARDS_STEP - o), u = Math.abs(h - this.AWARDS_STEP), l = u * this.SUDOKU_ITEM_SIZE + u * this.SUDOKU_ITEM_MARGIN, _ = e; this._positions.push({ x: l, y: _ }), this.drawSudokuItem(t, l, _, this.SUDOKU_ITEM_SIZE, this.sudokuItemRadius, this.awards[o].type, this.awards[o].content, this.SUDOKU_ITEM_TXT_SIZE, this.sudokuItemUnactiveTxtColor, this.sudokuItemUnactiveColor, this.sudokuItemUnactiveShadowColor) } if (o >= this.LEFT_BOTTOM_POINT) { var c = Math.abs(3 * this.AWARDS_STEP - o), d = Math.abs(c - this.AWARDS_STEP), T = d * this.SUDOKU_ITEM_SIZE + d * this.SUDOKU_ITEM_MARGIN; this._positions.push({ x: 0, y: T }), this.drawSudokuItem(t, 0, T, this.SUDOKU_ITEM_SIZE, this.sudokuItemRadius, this.awards[o].type, this.awards[o].content, this.SUDOKU_ITEM_TXT_SIZE, this.sudokuItemUnactiveTxtColor, this.sudokuItemUnactiveColor, this.sudokuItemUnactiveShadowColor) } } } }, { key: "drawSudokuItem", value: function (t, o, i, s, r, a, n, h, u, l, _) { if (t.save(), t.fillStyle = l, t.shadowOffsetX = 0, t.shadowOffsetY = 4, t.shadowBlur = 0, t.shadowColor = _, t.beginPath(), _get(e.prototype.__proto__ || Object.getPrototypeOf(e.prototype), "roundedRect", this).call(this, t, o, i, s, s, r), t.fill(), t.restore(), n) if ("image" === a) { var c = function () { t.drawImage(d, o + .2 * s / 2, i + .2 * s / 2, .8 * s, .8 * s) }, d = new Image; d.src = n, d.complete ? c() : d.onload = function (t) { c() } } else "text" !== a && "losing" !== a || (t.save(), t.fillStyle = u, t.font = h, t.translate(o + this.SUDOKU_ITEM_SIZE / 2 - t.measureText(n).width / 2, i + this.SUDOKU_ITEM_SIZE / 2 + 6), t.fillText(n, 0, 0), t.restore()) } }, { key: "drawButton", value: function (t) { var o = this.SUDOKU_ITEM_SIZE + this.SUDOKU_ITEM_MARGIN, i = this.SUDOKU_ITEM_SIZE + this.SUDOKU_ITEM_MARGIN; t.save(), t.fillStyle = this.buttonColor, t.shadowOffsetX = 0, t.shadowOffsetY = 4, t.shadowBlur = 0, t.shadowColor = this.buttonShadowColor, t.beginPath(), _get(e.prototype.__proto__ || Object.getPrototypeOf(e.prototype), "roundedRect", this).call(this, t, o, i, this.BUTTON_SIZE, this.BUTTON_SIZE, this.sudokuItemRadius, this.buttonColor, this.buttonShadowColor), t.fill(), t.restore(), t.save(), t.fillStyle = this.buttonTxtColor, t.font = this.BUTTON_TXT_SIZE, t.translate(o + this.BUTTON_SIZE / 2 - t.measureText("立即抽奖").width / 2, i + this.BUTTON_SIZE / 2 + 10), t.fillText("立即抽奖", 0, 0), t.restore(), this._buttonPosition = { x: o, y: i } } }, { key: "createButtonPath", value: function (t) { t.beginPath(), _get(e.prototype.__proto__ || Object.getPrototypeOf(e.prototype), "roundedRect", this).call(this, t, this._buttonPosition.x, this._buttonPosition.y, this.BUTTON_SIZE, this.BUTTON_SIZE, this.sudokuItemRadius) } }, { key: "sudokuItemMove", value: function (t) { if (this._isAnimate = !0, this._jumpIndex < this.AWARDS_LEN - 1 ? this._jumpIndex++ : this._jumpIndex >= this.AWARDS_LEN - 1 && (this._jumpIndex = 0), this._jumpingTime += 100, this._jumpingTime >= this._jumpTotalTime) return this._isAnimate = !1, void (this.finish && (0 != this._jumpIndex ? this.finish(this._jumpIndex - 1) : 0 === this._jumpIndex && this.finish(this.AWARDS_LEN - 1))); this.drawSudoku(t), "true" === this.hasButton && this.drawButton(t), this.drawSudokuItem(t, this._positions[this._jumpIndex].x, this._positions[this._jumpIndex].y, this.SUDOKU_ITEM_SIZE, this.sudokuItemRadius, this.awards[this._jumpIndex].type, this.awards[this._jumpIndex].content, this.SUDOKU_ITEM_TXT_SIZE, this.sudokuItemActiveTxtColor, this.sudokuItemActiveColor, this.sudokuItemActiveShadowColor), setTimeout(this.sudokuItemMove.bind(this, t), 50 + _get(e.prototype.__proto__ || Object.getPrototypeOf(e.prototype), "easeOut", this).call(this, this._jumpingTime, 0, this._jumpChange, this._jumpTotalTime)) } }, { key: "luckyDraw", value: function (t) { this._jumpingTime = 0, this._jumpTotalTime = 1e3 * Math.random() + this.duration, this._jumpChange = 3 * Math.random() + this.velocity, this.sudokuItemMove(t) } }, { key: "render", value: function (t, o) { var i = this; this._canvasStyle = t.getAttribute("style"), this.drawSudoku(o), "true" === this.hasButton && (this.drawButton(o), ["mousedown", "touchstart"].forEach(function (s) { t.addEventListener(s, function (s) { var r = _get(e.prototype.__proto__ || Object.getPrototypeOf(e.prototype), "windowToCanvas", i).call(i, t, s); i.createButtonPath(o), o.isPointInPath(r.x, r.y) && !i._isAnimate && i.luckyDraw(o) }) }), t.addEventListener("mousemove", function (s) { var r = _get(e.prototype.__proto__ || Object.getPrototypeOf(e.prototype), "windowToCanvas", i).call(i, t, s); i.createButtonPath(o), o.isPointInPath(r.x, r.y) ? t.setAttribute("style", "cursor: pointer;" + i._canvasStyle) : t.setAttribute("style", i._canvasStyle) })) } }]), e }();